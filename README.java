
        # â˜• Exemplos de Programas em Java

        Este repositÃ³rio contÃ©m vÃ¡rios exemplos simples em **Java** para aprendizado de lÃ³gica de programaÃ§Ã£o, variÃ¡veis, estruturas de decisÃ£o, laÃ§os de repetiÃ§Ã£o e coleÃ§Ãµes.  

        Cada arquivo representa um conceito fundamental da linguagem.  

        ---

        ## ğŸ“‚ Arquivos do Projeto

        ### ğŸ”¹ `Hello.java`
        Exemplo bÃ¡sico que imprime uma mensagem no console:
        ```java
        System.out.println("Hello World!");
        ```

        ### ğŸ”¹ `Variaveis.java`
        Demonstra o uso de diferentes tipos de variÃ¡veis:
        - `int` â†’ nÃºmeros inteiros  
        - `double` â†’ nÃºmeros decimais  
        - `char` â†’ caracteres  
        - `boolean` â†’ verdadeiro/falso  
        - `String` â†’ textos  

        ### ğŸ”¹ `Condicional.java`
        Solicita a idade do usuÃ¡rio e classifica como:
        - CrianÃ§a (menor de 12 anos)  
        - Adolescente (menor de 18 anos)  
        - Adulto (18 anos ou mais)  

        ### ğŸ”¹ `CondicionalComLoop.java`
        VersÃ£o do programa condicional com **loop `while`**, permitindo vÃ¡rias verificaÃ§Ãµes atÃ© o usuÃ¡rio decidir parar.  
        Categorias:  
        - CrianÃ§a  
        - Adolescente  
        - Adulto  
        - Idoso (60 anos ou mais)  

        ### ğŸ”¹ `Loops.java`
        Mostra exemplos de laÃ§os de repetiÃ§Ã£o:
        - **for** â†’ conta de 1 a 5  
        - **while** â†’ conta de 5 a 1  

        ### ğŸ”¹ `EstruturaDados.java`
        Trabalha com **estruturas de dados em Java**:  
        - Array tradicional (`int[]`)  
        - Lista dinÃ¢mica (`ArrayList<String>`)  

        ### ğŸ”¹ `Numeros.java`
        Exemplo de manipulaÃ§Ã£o de um `ArrayList<Integer>`:  
        - `add()` â†’ adiciona elementos  
        - `get()` â†’ acessa elemento por Ã­ndice  
        - `set()` â†’ altera valor em um Ã­ndice  
        - `remove()` â†’ remove elemento pelo Ã­ndice  
        - `size()` â†’ retorna o tamanho da lista  
        - `for-each` â†’ percorre os elementos  

        SaÃ­da esperada:
        ```
        NÃºmero na posiÃ§Ã£o 1: 20
        Tamanho atual: 2
        Valor: 25
        Valor: 30
        ```

        ## ğŸš€ Como Executar

        1. Certifique-se de ter o **Java JDK** instalado (versÃ£o 17 ou superior).  
        2. Compile o programa desejado no terminal:  
        ```bash
        javac NomeDoArquivo.java
        ```
        3. Execute:  
        ```bash
        java NomeDoArquivo
        ```

        Exemplo:
        ```bash
        javac Condicional.java
        java Condicional
        ```

        ## ğŸ›  Tecnologias
        - **Java** (JDK 17+)  
        - **IntelliJ IDEA Ultimate** ou outra IDE  

        ## ğŸ“š Objetivo
        Esses cÃ³digos foram criados para **estudo de lÃ³gica de programaÃ§Ã£o e fundamentos de Java**.  
        """;


